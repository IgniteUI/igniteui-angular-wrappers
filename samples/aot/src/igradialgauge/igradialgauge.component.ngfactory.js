"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./igradialgauge.component");
var styles_IgRadialGaugeComponent = [];
var RenderType_IgRadialGaugeComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgRadialGaugeComponent, data: {} });
exports.RenderType_IgRadialGaugeComponent = RenderType_IgRadialGaugeComponent;
function View_IgRadialGaugeComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgRadialGaugeComponent_0 = View_IgRadialGaugeComponent_0;
function View_IgRadialGaugeComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ig-radial-gauge", [], null, null, null, View_IgRadialGaugeComponent_0, RenderType_IgRadialGaugeComponent)), i0.ɵdid(1, 1032192, null, 0, i1.IgRadialGaugeComponent, [i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgRadialGaugeComponent_Host_0 = View_IgRadialGaugeComponent_Host_0;
var IgRadialGaugeComponentNgFactory = i0.ɵccf("ig-radial-gauge", i1.IgRadialGaugeComponent, View_IgRadialGaugeComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", width: "width", height: "height", ranges: "ranges", rangeBrushes: "rangeBrushes", rangeOutlines: "rangeOutlines", minimumValue: "minimumValue", maximumValue: "maximumValue", interval: "interval", centerX: "centerX", centerY: "centerY", value: "value", scaleStartAngle: "scaleStartAngle", scaleEndAngle: "scaleEndAngle", scaleSweepDirection: "scaleSweepDirection", transitionDuration: "transitionDuration", transitionEasingFunction: "transitionEasingFunction", needleBrush: "needleBrush", needleOutline: "needleOutline", needleStartExtent: "needleStartExtent", needleEndExtent: "needleEndExtent", needleShape: "needleShape", needleStartWidthRatio: "needleStartWidthRatio", needleEndWidthRatio: "needleEndWidthRatio", needleBaseFeatureWidthRatio: "needleBaseFeatureWidthRatio", needleBaseFeatureExtent: "needleBaseFeatureExtent", needlePointFeatureWidthRatio: "needlePointFeatureWidthRatio", needlePointFeatureExtent: "needlePointFeatureExtent", needlePivotWidthRatio: "needlePivotWidthRatio", needlePivotInnerWidthRatio: "needlePivotInnerWidthRatio", needlePivotShape: "needlePivotShape", scaleStartExtent: "scaleStartExtent", needlePivotBrush: "needlePivotBrush", needlePivotOutline: "needlePivotOutline", needleStrokeThickness: "needleStrokeThickness", needlePivotStrokeThickness: "needlePivotStrokeThickness", scaleEndExtent: "scaleEndExtent", labelExtent: "labelExtent", labelInterval: "labelInterval", tickStartExtent: "tickStartExtent", tickEndExtent: "tickEndExtent", tickStrokeThickness: "tickStrokeThickness", tickBrush: "tickBrush", fontBrush: "fontBrush", minorTickStartExtent: "minorTickStartExtent", minorTickEndExtent: "minorTickEndExtent", minorTickStrokeThickness: "minorTickStrokeThickness", minorTickBrush: "minorTickBrush", minorTickCount: "minorTickCount", scaleBrush: "scaleBrush", backingBrush: "backingBrush", backingOutline: "backingOutline", backingStrokeThickness: "backingStrokeThickness", backingOuterExtent: "backingOuterExtent", backingOversweep: "backingOversweep", scaleOversweep: "scaleOversweep", scaleOversweepShape: "scaleOversweepShape", backingCornerRadius: "backingCornerRadius", backingInnerExtent: "backingInnerExtent", backingShape: "backingShape", radiusMultiplier: "radiusMultiplier", duplicateLabelOmissionStrategy: "duplicateLabelOmissionStrategy", isNeedleDraggingEnabled: "isNeedleDraggingEnabled", isNeedleDraggingConstrained: "isNeedleDraggingConstrained", font: "font", transitionProgress: "transitionProgress", pixelScalingRatio: "pixelScalingRatio", options: "options" }, { formatLabel: "formatLabel", alignLabel: "alignLabel", valueChanged: "valueChanged" }, ["*"]);
exports.IgRadialGaugeComponentNgFactory = IgRadialGaugeComponentNgFactory;
//# sourceMappingURL=igradialgauge.component.ngfactory.js.map