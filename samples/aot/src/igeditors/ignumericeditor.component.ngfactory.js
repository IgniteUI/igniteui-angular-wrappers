"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./ignumericeditor.component");
var i2 = require("@angular/forms");
var styles_IgNumericEditorComponent = [];
var RenderType_IgNumericEditorComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgNumericEditorComponent, data: {} });
exports.RenderType_IgNumericEditorComponent = RenderType_IgNumericEditorComponent;
function View_IgNumericEditorComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgNumericEditorComponent_0 = View_IgNumericEditorComponent_0;
function View_IgNumericEditorComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ig-numeric-editor", [], null, null, null, View_IgNumericEditorComponent_0, RenderType_IgNumericEditorComponent)), i0.ɵdid(1, 1032192, null, 0, i1.IgNumericEditorComponent, [i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef, [2, i2.NgModel]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgNumericEditorComponent_Host_0 = View_IgNumericEditorComponent_Host_0;
var IgNumericEditorComponentNgFactory = i0.ɵccf("ig-numeric-editor", i1.IgNumericEditorComponent, View_IgNumericEditorComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", width: "width", height: "height", value: "value", tabIndex: "tabIndex", allowNullValue: "allowNullValue", nullValue: "nullValue", inputName: "inputName", readOnly: "readOnly", validatorOptions: "validatorOptions", buttonType: "buttonType", listItems: "listItems", listWidth: "listWidth", listItemHoverDuration: "listItemHoverDuration", dropDownAttachedToBody: "dropDownAttachedToBody", dropDownAnimationDuration: "dropDownAnimationDuration", visibleItemsCount: "visibleItemsCount", includeKeys: "includeKeys", excludeKeys: "excludeKeys", textAlign: "textAlign", placeHolder: "placeHolder", selectionOnFocus: "selectionOnFocus", textMode: "textMode", spinWrapAround: "spinWrapAround", isLimitedToListValues: "isLimitedToListValues", revertIfNotValid: "revertIfNotValid", preventSubmitOnEnter: "preventSubmitOnEnter", dropDownOrientation: "dropDownOrientation", maxLength: "maxLength", dropDownOnReadOnly: "dropDownOnReadOnly", toUpper: "toUpper", toLower: "toLower", locale: "locale", suppressNotifications: "suppressNotifications", regional: "regional", negativeSign: "negativeSign", negativePattern: "negativePattern", decimalSeparator: "decimalSeparator", groupSeparator: "groupSeparator", groups: "groups", maxDecimals: "maxDecimals", minDecimals: "minDecimals", dataMode: "dataMode", minValue: "minValue", maxValue: "maxValue", spinDelta: "spinDelta", scientificFormat: "scientificFormat", options: "options" }, { rendering: "rendering", rendered: "rendered", mousedown: "mousedown", mouseup: "mouseup", mousemove: "mousemove", mouseover: "mouseover", mouseout: "mouseout", blur: "blur", focus: "focus", keydown: "keydown", keypress: "keypress", keyup: "keyup", valueChanging: "valueChanging", valueChanged: "valueChanged", dropDownListOpening: "dropDownListOpening", dropDownListOpened: "dropDownListOpened", dropDownListClosing: "dropDownListClosing", dropDownListClosed: "dropDownListClosed", dropDownItemSelecting: "dropDownItemSelecting", dropDownItemSelected: "dropDownItemSelected", textChanged: "textChanged" }, ["*"]);
exports.IgNumericEditorComponentNgFactory = IgNumericEditorComponentNgFactory;
//# sourceMappingURL=ignumericeditor.component.ngfactory.js.map