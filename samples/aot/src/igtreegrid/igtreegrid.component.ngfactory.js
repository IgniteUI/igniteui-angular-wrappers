"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./igtreegrid.component");
var styles_IgTreeGridComponent = [];
var RenderType_IgTreeGridComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgTreeGridComponent, data: {} });
exports.RenderType_IgTreeGridComponent = RenderType_IgTreeGridComponent;
function View_IgTreeGridComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgTreeGridComponent_0 = View_IgTreeGridComponent_0;
function View_IgTreeGridComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, "ig-tree-grid", [], null, null, null, View_IgTreeGridComponent_0, RenderType_IgTreeGridComponent)), i0.ɵdid(1, 2080768, null, 2, i1.IgTreeGridComponent, [i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef], null, null), i0.ɵqud(603979776, 1, { _columns: 1 }), i0.ɵqud(335544320, 2, { featuresList: 0 })], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgTreeGridComponent_Host_0 = View_IgTreeGridComponent_Host_0;
var IgTreeGridComponentNgFactory = i0.ɵccf("ig-tree-grid", i1.IgTreeGridComponent, View_IgTreeGridComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", width: "width", height: "height", autoAdjustHeight: "autoAdjustHeight", avgRowHeight: "avgRowHeight", avgColumnWidth: "avgColumnWidth", defaultColumnWidth: "defaultColumnWidth", autoGenerateColumns: "autoGenerateColumns", virtualization: "virtualization", virtualizationMode: "virtualizationMode", requiresDataBinding: "requiresDataBinding", rowVirtualization: "rowVirtualization", columnVirtualization: "columnVirtualization", virtualizationMouseWheelStep: "virtualizationMouseWheelStep", adjustVirtualHeights: "adjustVirtualHeights", templatingEngine: "templatingEngine", columns: "columns", dataSourceUrl: "dataSourceUrl", dataSourceType: "dataSourceType", responseDataKey: "responseDataKey", responseTotalRecCountKey: "responseTotalRecCountKey", requestType: "requestType", responseContentType: "responseContentType", showHeader: "showHeader", showFooter: "showFooter", fixedHeaders: "fixedHeaders", fixedFooters: "fixedFooters", caption: "caption", features: "features", tabIndex: "tabIndex", localSchemaTransform: "localSchemaTransform", primaryKey: "primaryKey", serializeTransactionLog: "serializeTransactionLog", autoCommit: "autoCommit", aggregateTransactions: "aggregateTransactions", autoFormat: "autoFormat", renderCheckboxes: "renderCheckboxes", updateUrl: "updateUrl", restSettings: "restSettings", alternateRowStyles: "alternateRowStyles", autofitLastColumn: "autofitLastColumn", enableHoverStyles: "enableHoverStyles", enableUTCDates: "enableUTCDates", mergeUnboundColumns: "mergeUnboundColumns", jsonpRequest: "jsonpRequest", enableResizeContainerCheck: "enableResizeContainerCheck", featureChooserIconDisplay: "featureChooserIconDisplay", scrollSettings: "scrollSettings", indentation: "indentation", initialIndentationLevel: "initialIndentationLevel", showExpansionIndicator: "showExpansionIndicator", expandTooltipText: "expandTooltipText", collapseTooltipText: "collapseTooltipText", foreignKey: "foreignKey", initialExpandDepth: "initialExpandDepth", foreignKeyRootValue: "foreignKeyRootValue", renderExpansionIndicatorColumn: "renderExpansionIndicatorColumn", renderFirstDataCellFunction: "renderFirstDataCellFunction", childDataKey: "childDataKey", renderExpansionCellFunction: "renderExpansionCellFunction", enableRemoteLoadOnDemand: "enableRemoteLoadOnDemand", dataSourceSettings: "dataSourceSettings", options: "options", dataSource: "dataSource" }, { cellClick: "cellClick", cellRightClick: "cellRightClick", dataBinding: "dataBinding", dataBound: "dataBound", rendering: "rendering", rendered: "rendered", dataRendering: "dataRendering", dataRendered: "dataRendered", headerRendering: "headerRendering", headerRendered: "headerRendered", footerRendering: "footerRendering", footerRendered: "footerRendered", headerCellRendered: "headerCellRendered", rowsRendering: "rowsRendering", rowsRendered: "rowsRendered", schemaGenerated: "schemaGenerated", columnsCollectionModified: "columnsCollectionModified", requestError: "requestError", created: "created", destroyed: "destroyed", rowExpanding: "rowExpanding", rowExpanded: "rowExpanded", rowCollapsing: "rowCollapsing", rowCollapsed: "rowCollapsed" }, ["*"]);
exports.IgTreeGridComponentNgFactory = IgTreeGridComponentNgFactory;
//# sourceMappingURL=igtreegrid.component.ngfactory.js.map