"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./igmap.component");
var styles_IgMapComponent = [];
var RenderType_IgMapComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgMapComponent, data: {} });
exports.RenderType_IgMapComponent = RenderType_IgMapComponent;
function View_IgMapComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgMapComponent_0 = View_IgMapComponent_0;
function View_IgMapComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ig-map", [], null, null, null, View_IgMapComponent_0, RenderType_IgMapComponent)), i0.ɵdid(1, 1032192, null, 0, i1.IgMapComponent, [i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgMapComponent_Host_0 = View_IgMapComponent_Host_0;
var IgMapComponentNgFactory = i0.ɵccf("ig-map", i1.IgMapComponent, View_IgMapComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", width: "width", height: "height", dataSource: "dataSource", dataSourceUrl: "dataSourceUrl", dataSourceType: "dataSourceType", responseDataKey: "responseDataKey", autoMarginWidth: "autoMarginWidth", autoMarginHeight: "autoMarginHeight", crosshairVisibility: "crosshairVisibility", crosshairPoint: "crosshairPoint", plotAreaBackground: "plotAreaBackground", defaultInteraction: "defaultInteraction", dragModifier: "dragModifier", panModifier: "panModifier", previewRect: "previewRect", windowRect: "windowRect", zoomable: "zoomable", windowScale: "windowScale", windowResponse: "windowResponse", windowRectMinWidth: "windowRectMinWidth", windowPositionHorizontal: "windowPositionHorizontal", windowPositionVertical: "windowPositionVertical", circleMarkerTemplate: "circleMarkerTemplate", triangleMarkerTemplate: "triangleMarkerTemplate", pyramidMarkerTemplate: "pyramidMarkerTemplate", squareMarkerTemplate: "squareMarkerTemplate", diamondMarkerTemplate: "diamondMarkerTemplate", pentagonMarkerTemplate: "pentagonMarkerTemplate", hexagonMarkerTemplate: "hexagonMarkerTemplate", tetragramMarkerTemplate: "tetragramMarkerTemplate", pentagramMarkerTemplate: "pentagramMarkerTemplate", hexagramMarkerTemplate: "hexagramMarkerTemplate", overviewPlusDetailPaneBackgroundImageUri: "overviewPlusDetailPaneBackgroundImageUri", useTiledZooming: "useTiledZooming", preferHigherResolutionTiles: "preferHigherResolutionTiles", zoomTileCacheSize: "zoomTileCacheSize", backgroundContent: "backgroundContent", series: "series", theme: "theme", options: "options" }, { tooltipShowing: "tooltipShowing", tooltipShown: "tooltipShown", tooltipHiding: "tooltipHiding", tooltipHidden: "tooltipHidden", browserNotSupported: "browserNotSupported", seriesCursorMouseMove: "seriesCursorMouseMove", seriesMouseLeftButtonDown: "seriesMouseLeftButtonDown", seriesMouseLeftButtonUp: "seriesMouseLeftButtonUp", seriesMouseMove: "seriesMouseMove", seriesMouseEnter: "seriesMouseEnter", seriesMouseLeave: "seriesMouseLeave", windowRectChanged: "windowRectChanged", gridAreaRectChanged: "gridAreaRectChanged", refreshCompleted: "refreshCompleted", triangulationStatusChanged: "triangulationStatusChanged" }, ["*"]);
exports.IgMapComponentNgFactory = IgMapComponentNgFactory;
//# sourceMappingURL=igmap.component.ngfactory.js.map