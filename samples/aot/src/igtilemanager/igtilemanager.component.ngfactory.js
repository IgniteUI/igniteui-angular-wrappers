"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./igtilemanager.component");
var styles_IgTileManagerComponent = [];
var RenderType_IgTileManagerComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgTileManagerComponent, data: {} });
exports.RenderType_IgTileManagerComponent = RenderType_IgTileManagerComponent;
function View_IgTileManagerComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgTileManagerComponent_0 = View_IgTileManagerComponent_0;
function View_IgTileManagerComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ig-tile-manager", [], null, null, null, View_IgTileManagerComponent_0, RenderType_IgTileManagerComponent)), i0.ɵdid(1, 1032192, null, 0, i1.IgTileManagerComponent, [i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgTileManagerComponent_Host_0 = View_IgTileManagerComponent_Host_0;
var IgTileManagerComponentNgFactory = i0.ɵccf("ig-tile-manager", i1.IgTileManagerComponent, View_IgTileManagerComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", width: "width", height: "height", columnWidth: "columnWidth", columnHeight: "columnHeight", cols: "cols", rows: "rows", marginLeft: "marginLeft", marginTop: "marginTop", rearrangeItems: "rearrangeItems", items: "items", minimizedState: "minimizedState", maximizedState: "maximizedState", maximizedTileIndex: "maximizedTileIndex", rightPanelCols: "rightPanelCols", rightPanelTilesWidth: "rightPanelTilesWidth", rightPanelTilesHeight: "rightPanelTilesHeight", showRightPanelScroll: "showRightPanelScroll", splitterOptions: "splitterOptions", preventMaximizingSelector: "preventMaximizingSelector", animationDuration: "animationDuration", dataSourceUrl: "dataSourceUrl", responseDataKey: "responseDataKey", responseDataType: "responseDataType", dataSourceType: "dataSourceType", requestType: "requestType", responseContentType: "responseContentType", options: "options", dataSource: "dataSource" }, { dataBinding: "dataBinding", dataBound: "dataBound", rendering: "rendering", rendered: "rendered", tileRendering: "tileRendering", tileRendered: "tileRendered", tileMaximizing: "tileMaximizing", tileMaximized: "tileMaximized", tileMinimizing: "tileMinimizing", tileMinimized: "tileMinimized" }, ["*"]);
exports.IgTileManagerComponentNgFactory = IgTileManagerComponentNgFactory;
//# sourceMappingURL=igtilemanager.component.ngfactory.js.map