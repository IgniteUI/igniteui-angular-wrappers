"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./igcombo.component");
var i2 = require("@angular/forms");
var styles_IgComboComponent = [];
var RenderType_IgComboComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgComboComponent, data: {} });
exports.RenderType_IgComboComponent = RenderType_IgComboComponent;
function View_IgComboComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgComboComponent_0 = View_IgComboComponent_0;
function View_IgComboComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ig-combo", [], null, null, null, View_IgComboComponent_0, RenderType_IgComboComponent)), i0.ɵdid(1, 1032192, null, 0, i1.IgComboComponent, [[2, i2.NgModel], i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgComboComponent_Host_0 = View_IgComboComponent_Host_0;
var IgComboComponentNgFactory = i0.ɵccf("ig-combo", i1.IgComboComponent, View_IgComboComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", width: "width", height: "height", dropDownWidth: "dropDownWidth", dataSourceType: "dataSourceType", dataSourceUrl: "dataSourceUrl", responseTotalRecCountKey: "responseTotalRecCountKey", responseDataKey: "responseDataKey", responseDataType: "responseDataType", responseContentType: "responseContentType", requestType: "requestType", valueKey: "valueKey", textKey: "textKey", itemTemplate: "itemTemplate", headerTemplate: "headerTemplate", footerTemplate: "footerTemplate", inputName: "inputName", animationShowDuration: "animationShowDuration", animationHideDuration: "animationHideDuration", dropDownAttachedToBody: "dropDownAttachedToBody", filteringType: "filteringType", filterExprUrlKey: "filterExprUrlKey", filteringCondition: "filteringCondition", filteringLogic: "filteringLogic", noMatchFoundText: "noMatchFoundText", loadOnDemandSettings: "loadOnDemandSettings", visibleItemsCount: "visibleItemsCount", placeHolder: "placeHolder", mode: "mode", virtualization: "virtualization", multiSelection: "multiSelection", grouping: "grouping", validatorOptions: "validatorOptions", highlightMatchesMode: "highlightMatchesMode", caseSensitive: "caseSensitive", autoSelectFirstMatch: "autoSelectFirstMatch", autoComplete: "autoComplete", allowCustomValue: "allowCustomValue", closeDropDownOnBlur: "closeDropDownOnBlur", delayInputChangeProcessing: "delayInputChangeProcessing", tabIndex: "tabIndex", dropDownOnFocus: "dropDownOnFocus", closeDropDownOnSelect: "closeDropDownOnSelect", selectItemBySpaceKey: "selectItemBySpaceKey", initialSelectedItems: "initialSelectedItems", preventSubmitOnEnter: "preventSubmitOnEnter", format: "format", suppressKeyboard: "suppressKeyboard", enableClearButton: "enableClearButton", dropDownButtonTitle: "dropDownButtonTitle", clearButtonTitle: "clearButtonTitle", dropDownOrientation: "dropDownOrientation", options: "options", dataSource: "dataSource" }, { rendered: "rendered", dataBinding: "dataBinding", dataBound: "dataBound", filtering: "filtering", filtered: "filtered", itemsRendering: "itemsRendering", itemsRendered: "itemsRendered", dropDownOpening: "dropDownOpening", dropDownOpened: "dropDownOpened", dropDownClosing: "dropDownClosing", dropDownClosed: "dropDownClosed", selectionChanging: "selectionChanging", selectionChanged: "selectionChanged" }, ["*"]);
exports.IgComboComponentNgFactory = IgComboComponentNgFactory;
//# sourceMappingURL=igcombo.component.ngfactory.js.map