"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./igsparkline.component");
var styles_IgSparklineComponent = [];
var RenderType_IgSparklineComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgSparklineComponent, data: {} });
exports.RenderType_IgSparklineComponent = RenderType_IgSparklineComponent;
function View_IgSparklineComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgSparklineComponent_0 = View_IgSparklineComponent_0;
function View_IgSparklineComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ig-sparkline", [], null, null, null, View_IgSparklineComponent_0, RenderType_IgSparklineComponent)), i0.ɵdid(1, 1032192, null, 0, i1.IgSparklineComponent, [i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgSparklineComponent_Host_0 = View_IgSparklineComponent_Host_0;
var IgSparklineComponentNgFactory = i0.ɵccf("ig-sparkline", i1.IgSparklineComponent, View_IgSparklineComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", width: "width", height: "height", tooltipTemplate: "tooltipTemplate", maxRecCount: "maxRecCount", dataSourceType: "dataSourceType", dataSourceUrl: "dataSourceUrl", responseTotalRecCountKey: "responseTotalRecCountKey", responseDataKey: "responseDataKey", brush: "brush", negativeBrush: "negativeBrush", markerBrush: "markerBrush", negativeMarkerBrush: "negativeMarkerBrush", firstMarkerBrush: "firstMarkerBrush", lastMarkerBrush: "lastMarkerBrush", highMarkerBrush: "highMarkerBrush", lowMarkerBrush: "lowMarkerBrush", trendLineBrush: "trendLineBrush", horizontalAxisBrush: "horizontalAxisBrush", verticalAxisBrush: "verticalAxisBrush", normalRangeFill: "normalRangeFill", horizontalAxisVisibility: "horizontalAxisVisibility", verticalAxisVisibility: "verticalAxisVisibility", markerVisibility: "markerVisibility", negativeMarkerVisibility: "negativeMarkerVisibility", firstMarkerVisibility: "firstMarkerVisibility", lastMarkerVisibility: "lastMarkerVisibility", lowMarkerVisibility: "lowMarkerVisibility", highMarkerVisibility: "highMarkerVisibility", normalRangeVisibility: "normalRangeVisibility", displayNormalRangeInFront: "displayNormalRangeInFront", markerSize: "markerSize", firstMarkerSize: "firstMarkerSize", lastMarkerSize: "lastMarkerSize", highMarkerSize: "highMarkerSize", lowMarkerSize: "lowMarkerSize", negativeMarkerSize: "negativeMarkerSize", lineThickness: "lineThickness", valueMemberPath: "valueMemberPath", labelMemberPath: "labelMemberPath", trendLineType: "trendLineType", trendLinePeriod: "trendLinePeriod", trendLineThickness: "trendLineThickness", normalRangeMinimum: "normalRangeMinimum", normalRangeMaximum: "normalRangeMaximum", displayType: "displayType", unknownValuePlotting: "unknownValuePlotting", verticalAxisLabel: "verticalAxisLabel", horizontalAxisLabel: "horizontalAxisLabel", formatLabel: "formatLabel", pixelScalingRatio: "pixelScalingRatio", options: "options", dataSource: "dataSource" }, { dataBinding: "dataBinding", dataBound: "dataBound", updateTooltip: "updateTooltip", hideTooltip: "hideTooltip" }, ["*"]);
exports.IgSparklineComponentNgFactory = IgSparklineComponentNgFactory;
//# sourceMappingURL=igsparkline.component.ngfactory.js.map