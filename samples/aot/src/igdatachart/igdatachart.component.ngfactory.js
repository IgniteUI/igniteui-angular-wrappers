"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./igdatachart.component");
var styles_IgDataChartComponent = [];
var RenderType_IgDataChartComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgDataChartComponent, data: {} });
exports.RenderType_IgDataChartComponent = RenderType_IgDataChartComponent;
function View_IgDataChartComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgDataChartComponent_0 = View_IgDataChartComponent_0;
function View_IgDataChartComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ig-data-chart", [], null, null, null, View_IgDataChartComponent_0, RenderType_IgDataChartComponent)), i0.ɵdid(1, 1032192, null, 0, i1.IgDataChartComponent, [i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgDataChartComponent_Host_0 = View_IgDataChartComponent_Host_0;
var IgDataChartComponentNgFactory = i0.ɵccf("ig-data-chart", i1.IgDataChartComponent, View_IgDataChartComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", isPagePanningAllowed: "isPagePanningAllowed", syncChannel: "syncChannel", synchronizeVertically: "synchronizeVertically", synchronizeHorizontally: "synchronizeHorizontally", crosshairPoint: "crosshairPoint", windowRect: "windowRect", horizontalZoomable: "horizontalZoomable", verticalZoomable: "verticalZoomable", windowResponse: "windowResponse", windowRectMinWidth: "windowRectMinWidth", overviewPlusDetailPaneVisibility: "overviewPlusDetailPaneVisibility", crosshairVisibility: "crosshairVisibility", plotAreaBackground: "plotAreaBackground", defaultInteraction: "defaultInteraction", dragModifier: "dragModifier", panModifier: "panModifier", previewRect: "previewRect", windowPositionHorizontal: "windowPositionHorizontal", windowPositionVertical: "windowPositionVertical", windowScaleHorizontal: "windowScaleHorizontal", windowScaleVertical: "windowScaleVertical", circleMarkerTemplate: "circleMarkerTemplate", triangleMarkerTemplate: "triangleMarkerTemplate", pyramidMarkerTemplate: "pyramidMarkerTemplate", squareMarkerTemplate: "squareMarkerTemplate", diamondMarkerTemplate: "diamondMarkerTemplate", pentagonMarkerTemplate: "pentagonMarkerTemplate", hexagonMarkerTemplate: "hexagonMarkerTemplate", tetragramMarkerTemplate: "tetragramMarkerTemplate", pentagramMarkerTemplate: "pentagramMarkerTemplate", hexagramMarkerTemplate: "hexagramMarkerTemplate", topMargin: "topMargin", leftMargin: "leftMargin", rightMargin: "rightMargin", bottomMargin: "bottomMargin", autoMarginWidth: "autoMarginWidth", autoMarginHeight: "autoMarginHeight", isSquare: "isSquare", gridMode: "gridMode", brushes: "brushes", markerBrushes: "markerBrushes", outlines: "outlines", markerOutlines: "markerOutlines", width: "width", height: "height", size: "size", dataSourceUrl: "dataSourceUrl", dataSourceType: "dataSourceType", responseDataKey: "responseDataKey", isSurfaceInteractionDisabled: "isSurfaceInteractionDisabled", animateSeriesWhenAxisRangeChanges: "animateSeriesWhenAxisRangeChanges", title: "title", subtitle: "subtitle", titleTextStyle: "titleTextStyle", titleTopMargin: "titleTopMargin", titleLeftMargin: "titleLeftMargin", titleRightMargin: "titleRightMargin", titleBottomMargin: "titleBottomMargin", subtitleTextStyle: "subtitleTextStyle", subtitleTopMargin: "subtitleTopMargin", subtitleLeftMargin: "subtitleLeftMargin", subtitleRightMargin: "subtitleRightMargin", subtitleBottomMargin: "subtitleBottomMargin", titleTextColor: "titleTextColor", subtitleTextColor: "subtitleTextColor", titleHorizontalAlignment: "titleHorizontalAlignment", subtitleHorizontalAlignment: "subtitleHorizontalAlignment", highlightingTransitionDuration: "highlightingTransitionDuration", useTiledZooming: "useTiledZooming", preferHigherResolutionTiles: "preferHigherResolutionTiles", pixelScalingRatio: "pixelScalingRatio", zoomTileCacheSize: "zoomTileCacheSize", contentHitTestMode: "contentHitTestMode", legend: "legend", axes: "axes", series: "series", theme: "theme", options: "options", dataSource: "dataSource" }, { tooltipShowing: "tooltipShowing", tooltipShown: "tooltipShown", tooltipHiding: "tooltipHiding", tooltipHidden: "tooltipHidden", browserNotSupported: "browserNotSupported", seriesCursorMouseMove: "seriesCursorMouseMove", seriesMouseLeftButtonDown: "seriesMouseLeftButtonDown", seriesMouseLeftButtonUp: "seriesMouseLeftButtonUp", seriesMouseMove: "seriesMouseMove", seriesMouseEnter: "seriesMouseEnter", seriesMouseLeave: "seriesMouseLeave", windowRectChanged: "windowRectChanged", gridAreaRectChanged: "gridAreaRectChanged", refreshCompleted: "refreshCompleted", axisRangeChanged: "axisRangeChanged", typicalBasedOn: "typicalBasedOn", progressiveLoadStatusChanged: "progressiveLoadStatusChanged", assigningCategoryStyle: "assigningCategoryStyle", assigningCategoryMarkerStyle: "assigningCategoryMarkerStyle" }, ["*"]);
exports.IgDataChartComponentNgFactory = IgDataChartComponentNgFactory;
//# sourceMappingURL=igdatachart.component.ngfactory.js.map