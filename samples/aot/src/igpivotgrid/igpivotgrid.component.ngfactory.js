"use strict";
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
Object.defineProperty(exports, "__esModule", { value: true });
var i0 = require("@angular/core");
var i1 = require("./igpivotgrid.component");
var styles_IgPivotGridComponent = [];
var RenderType_IgPivotGridComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_IgPivotGridComponent, data: {} });
exports.RenderType_IgPivotGridComponent = RenderType_IgPivotGridComponent;
function View_IgPivotGridComponent_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }
exports.View_IgPivotGridComponent_0 = View_IgPivotGridComponent_0;
function View_IgPivotGridComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "ig-pivot-grid", [], null, null, null, View_IgPivotGridComponent_0, RenderType_IgPivotGridComponent)), i0.ɵdid(1, 1032192, null, 0, i1.IgPivotGridComponent, [i0.ElementRef, i0.Renderer, i0.IterableDiffers, i0.KeyValueDiffers, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
exports.View_IgPivotGridComponent_Host_0 = View_IgPivotGridComponent_Host_0;
var IgPivotGridComponentNgFactory = i0.ɵccf("ig-pivot-grid", i1.IgPivotGridComponent, View_IgPivotGridComponent_Host_0, { widgetId: "widgetId", changeDetectionInterval: "changeDetectionInterval", disabled: "disabled", create: "create", width: "width", height: "height", dataSourceOptions: "dataSourceOptions", deferUpdate: "deferUpdate", isParentInFrontForColumns: "isParentInFrontForColumns", isParentInFrontForRows: "isParentInFrontForRows", compactColumnHeaders: "compactColumnHeaders", compactRowHeaders: "compactRowHeaders", rowHeadersLayout: "rowHeadersLayout", compactColumnHeaderIndentation: "compactColumnHeaderIndentation", compactRowHeaderIndentation: "compactRowHeaderIndentation", rowHeaderLinkGroupIndentation: "rowHeaderLinkGroupIndentation", treeRowHeaderIndentation: "treeRowHeaderIndentation", defaultRowHeaderWidth: "defaultRowHeaderWidth", allowSorting: "allowSorting", firstSortDirection: "firstSortDirection", allowHeaderRowsSorting: "allowHeaderRowsSorting", allowHeaderColumnsSorting: "allowHeaderColumnsSorting", levelSortDirections: "levelSortDirections", defaultLevelSortBehavior: "defaultLevelSortBehavior", firstLevelSortDirection: "firstLevelSortDirection", gridOptions: "gridOptions", dragAndDropSettings: "dragAndDropSettings", dropDownParent: "dropDownParent", disableRowsDropArea: "disableRowsDropArea", disableColumnsDropArea: "disableColumnsDropArea", disableMeasuresDropArea: "disableMeasuresDropArea", disableFiltersDropArea: "disableFiltersDropArea", hideRowsDropArea: "hideRowsDropArea", hideColumnsDropArea: "hideColumnsDropArea", hideMeasuresDropArea: "hideMeasuresDropArea", hideFiltersDropArea: "hideFiltersDropArea", customMoveValidation: "customMoveValidation", options: "options", dataSource: "dataSource" }, { dataSourceInitialized: "dataSourceInitialized", dataSourceUpdated: "dataSourceUpdated", pivotGridHeadersRendered: "pivotGridHeadersRendered", pivotGridRendered: "pivotGridRendered", tupleMemberExpanding: "tupleMemberExpanding", tupleMemberExpanded: "tupleMemberExpanded", tupleMemberCollapsing: "tupleMemberCollapsing", tupleMemberCollapsed: "tupleMemberCollapsed", sorting: "sorting", sorted: "sorted", headersSorting: "headersSorting", headersSorted: "headersSorted", dragStart: "dragStart", drag: "drag", dragStop: "dragStop", metadataDropping: "metadataDropping", metadataDropped: "metadataDropped", metadataRemoving: "metadataRemoving", metadataRemoved: "metadataRemoved", filterDropDownOpening: "filterDropDownOpening", filterDropDownOpened: "filterDropDownOpened", filterMembersLoaded: "filterMembersLoaded", filterDropDownOk: "filterDropDownOk", filterDropDownClosing: "filterDropDownClosing", filterDropDownClosed: "filterDropDownClosed" }, ["*"]);
exports.IgPivotGridComponentNgFactory = IgPivotGridComponentNgFactory;
//# sourceMappingURL=igpivotgrid.component.ngfactory.js.map